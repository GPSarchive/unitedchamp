/* Image-only styles (scoped to PlayersClient via CSS Modules)
   ‚Äî updated to support a clean, reflective gloss that clips to PNG alpha
   ‚Äî no color shifting; only specular (white) highlights
*/

/* Spotlight/hero IMG */
.heroImg {
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* tweak freely without touching wrappers */
    border-radius: 0.75rem; /* matches rounded-xl look */
    /* Optional mild pop
    filter: contrast(1.03) saturate(1.06);
    */
  }
  
  /* List avatar IMG */
  .avatarImg {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 0.375rem; /* matches rounded-md look */
  }
  
  /* =========================
     Reflective gloss system
     =========================
     Usage (React):
     - Wrap your <img> with a relatively positioned container.
     - Add a <div className={styles.maskClip}> as an overlay above the image.
     - Inside it, place:
         <div className={styles.specularBase} />
         <div className={styles.specularSweep} style={{ transform: `rotate(${angle}deg)` }}>
           <div className={styles.specularSweepLine} />
         </div>
         <div className={styles.microRidges} />
     - Provide the PNG URL to the overlay via CSS var:
         style={{ ['--mask-url' as any]: `url(${pngUrl})` }}
  */
  

  /* Clips ALL overlay children to the PNG's alpha channel. Set --mask-url inline. */
.maskClip {
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: inherit;
    z-index: 1;
  
    /* Mask with the PNG alpha */
    -webkit-mask-image: var(--mask-url);
    mask-image: var(--mask-url);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: cover;
    mask-size: cover;
    -webkit-mask-position: center;
    mask-position: center;
    mask-mode: alpha; /* üîë */
    overflow: hidden; /* keeps any rotated sweep edges tidy */
  }
  
  /* Subtle static gloss (white only, no tint). Controls: --gloss-base */
  .specularBase {
    position: absolute;
    inset: 0;
    mix-blend-mode: screen;
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.06),
      rgba(255, 255, 255, 0.02) 40%,
      rgba(255, 255, 255, 0) 70%
    );
    opacity: var(--gloss-base, 0.5);
  }
  
  /* Sweep container ‚Äî rotate via inline style or a motion value */
  .specularSweep {
    position: absolute;
    inset: -20%; /* extra bounds so the band doesn‚Äôt clip when rotated */
    will-change: transform;
  }
  
  /* Thin specular line; translate this horizontally with Framer Motion.
     Controls:
     --gloss-thickness: px width of the line
     --gloss-blur: blur radius (keep small for crisp highlight)
     --gloss-opacity: line opacity
  */
  .specularSweepLine {
    width: var(--gloss-thickness, 110px);
    height: 140%;
    margin: 0 auto;
    background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.22) 50%,
      rgba(255, 255, 255, 0) 100%
    );
   
    mix-blend-mode: screen;
    opacity: var(--gloss-opacity, 0.75);
    will-change: transform;
  }
  
  /* Very subtle clearcoat ‚Äúmicro-ridges‚Äù (optional). Control with --gloss-ridges */
  .microRidges {
    position: absolute;
    inset: 0;
    mix-blend-mode: screen;
    background-image: repeating-linear-gradient(
      0deg,
      rgba(255, 255, 255, 0.03) 0 1px,
      rgba(255, 255, 255, 0) 2px
    );
    opacity: var(--gloss-ridges, 0.12);
  }
  
  /* =========================
     Legacy glimmer styles (if you still use them)
     Adjusted to be much less blurry
     ========================= */
  
  .glimmer {
    pointer-events: none;
    position: absolute;
    inset: 0;
    overflow: hidden;
    border-radius: inherit;
  }
  
  .glimmerBand {
    position: absolute;
    left: 0;
    right: 0;
    height: 50%;
    mix-blend-mode: screen;
    background: linear-gradient(
      to top,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.10) 40%,
      rgba(255, 255, 255, 0.22) 50%,
      rgba(255, 255, 255, 0.10) 60%,
      rgba(255, 255, 255, 0) 100%
    );
    filter: blur(1px); /* lowered from 6px for a crisper highlight */
    will-change: transform;
  }
  