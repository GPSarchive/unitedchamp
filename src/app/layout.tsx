// app/layout.tsx
import React from "react";
import type { Metadata, Viewport } from "next";
import "./globals.css";

import Navbar from "./lib/Navbar/Navbar";
import {
  Geist,
  Geist_Mono,
  Roboto_Condensed,
  Ubuntu_Condensed,
  Noto_Sans,
} from "next/font/google";

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({ variable: "--font-geist-mono", subsets: ["latin"] });

const robotoCondensed = Roboto_Condensed({
  subsets: ["latin", "greek"],
  weight: ["300", "400", "700"],
  variable: "--font-roboto-condensed",
  display: "swap",
});

const ubuntuCondensed = Ubuntu_Condensed({
  subsets: ["latin", "greek"],
  weight: ["400"],
  variable: "--font-ubuntu-condensed",
  display: "swap",
});

const notoSans = Noto_Sans({
  subsets: ["latin", "greek"],
  weight: ["400", "700"],
  variable: "--font-noto-sans",
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const viewport: Viewport = {
  width: "device-width",
  initialScale: 1,
  viewportFit: "cover",
  // maximumScale: 1, // optional
};

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const htmlClass = [
    robotoCondensed.variable,
    ubuntuCondensed.variable,
    notoSans.variable,
    geistSans.variable,
    geistMono.variable,
  ].join(" ");

  // Use createElement to avoid any whitespace text nodes under <html>
  return React.createElement(
    "html",
    { lang: "el", className: htmlClass, suppressHydrationWarning: true },
    [
      React.createElement("head", { key: "head" }),
      React.createElement(
        "body",
        { key: "body", className: "antialiased font-sans", suppressHydrationWarning: true },
        [React.createElement(Navbar, { key: "nav" }), children]
      ),
    ]
  );
}
